(function (React$1, ReactDOM, d3) {
  'use strict';

  React$1 = React$1 && Object.prototype.hasOwnProperty.call(React$1, 'default') ? React$1['default'] : React$1;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const FaceContainer = ({children, width, height, centerX, centerY}) => (
    
  React.createElement( 'svg', { width: width, height: height },
      React.createElement( 'g', { transform: `translate(${centerX},${centerY})` },
        children
    )
    )
  );

  const BackgroundCirlce = ({radius, strokewidth})=>(
  	 React.createElement( 'circle', {
            r: radius, fill: "yellow", stroke: "black", 'stroke-width': strokewidth }) 
  );

  const Eyes = ({eyeR,eyeOffsetX,eyeOffsetY }) =>(
    React.createElement( React.Fragment, null,
  		React.createElement( 'circle', {
                  r: eyeR, fill: "white", stroke: "black", 'stroke-width': "10", cx: -eyeOffsetX, cy: -eyeOffsetY }),
        React.createElement( 'circle', {
                  r: eyeR, fill: "white", stroke: "black", 'stroke-width': "10", cx: eyeOffsetX, cy: -eyeOffsetY })
      )
    );

  const Mouth = ({innerRadius, outerRadius})=>{
    const mouthArc = d3.arc()
  	.innerRadius(innerRadius)
  	.outerRadius(outerRadius)
  	.startAngle(Math.PI / 2)
  	.endAngle(Math.PI* 3/2);
      
  	return React.createElement( 'path', { d: mouthArc() })
  };

  const Face = ({
    width, 
    height, 
    centerX, 
    centerY, 
    eyeR, 
    strokewidth,
    innerRadius, 
    outerRadius, 
    eyeOffsetX, 
    eyeOffsetY}) => (
  	React.createElement( FaceContainer, { width: width, height: height, centerX: centerX, centerY: centerY },
        React.createElement( BackgroundCirlce, { radius: centerY-strokewidth /2, strokewidth: strokewidth }),
        React.createElement( Eyes, { eyeR: eyeR, eyeOffsetX: eyeOffsetX, eyeOffsetY: eyeOffsetY }),
        React.createElement( Mouth, { innerRadius: innerRadius, outerRadius: outerRadius })
       )
  );

  const width = 150;
  const height = 150;
  const array = d3.range(100);

  const App = () =>  array.map(()=>(
    	
  			React$1.createElement( Face, { 
          width: width, height: height, centerX: width/2, centerY: height/2, strokewidth: 2, eyeOffsetX: 20, eyeOffsetY: 10, eyeR: 5 + Math.random()*10, innerRadius: 40, outerRadius: 45 })
    ));
  const rootElement = document.getElementById("root");
  ReactDOM.render(React$1.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIkZhY2VDb250YWluZXIuanMiLCJCYWNrZ3JvdW5kQ2lyY2xlLmpzIiwiRXllcy5qcyIsIk1vdXRoLmpzIiwiRmFjZS5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBGYWNlQ29udGFpbmVyID0gKHtjaGlsZHJlbiwgd2lkdGgsIGhlaWdodCwgY2VudGVyWCwgY2VudGVyWX0pID0+IChcbiAgXG48c3ZnIHdpZHRoPXt3aWR0aH0gaGVpZ2h0ID0ge2hlaWdodH0+XG4gICAgPGcgdHJhbnNmb3JtID0ge2B0cmFuc2xhdGUoJHtjZW50ZXJYfSwke2NlbnRlcll9KWB9PlxuICAgICAge2NoaWxkcmVufVxuICA8L2c+XG4gIDwvc3ZnPlxuKTsiLCJleHBvcnQgY29uc3QgQmFja2dyb3VuZENpcmxjZSA9ICh7cmFkaXVzLCBzdHJva2V3aWR0aH0pPT4oXG5cdCA8Y2lyY2xlXG4gICAgICAgICAgcj17cmFkaXVzfVxuICAgICAgICAgIGZpbGw9XCJ5ZWxsb3dcIlxuICAgICAgICAgIHN0cm9rZT1cImJsYWNrXCJcbiAgICAgICAgICBzdHJva2Utd2lkdGg9e3N0cm9rZXdpZHRofVxuICAgICAgICAvPiBcbik7IiwiZXhwb3J0IGNvbnN0IEV5ZXMgPSAoe2V5ZVIsZXllT2Zmc2V0WCxleWVPZmZzZXRZIH0pID0+KFxuICA8PlxuXHRcdDxjaXJjbGVcbiAgICAgICAgICAgICAgICByPXtleWVSfVxuICAgICAgICAgICAgICAgIGZpbGw9XCJ3aGl0ZVwiXG4gICAgICAgICAgICAgICAgc3Ryb2tlID0gXCJibGFja1wiXG4gICAgICAgICAgICAgICAgc3Ryb2tlLXdpZHRoID0gXCIxMFwiXG4gICAgICAgICAgICAgICAgY3g9ey1leWVPZmZzZXRYfVxuICAgICAgICAgICAgICAgIGN5PXstZXllT2Zmc2V0WX1cbiAgICAgICAgICAgICAgICA+PC9jaXJjbGU+XG4gICAgICA8Y2lyY2xlXG4gICAgICAgICAgICAgICAgcj17ZXllUn1cbiAgICAgICAgICAgICAgICBmaWxsPVwid2hpdGVcIlxuICAgICAgICAgICAgICAgIHN0cm9rZSA9IFwiYmxhY2tcIlxuICAgICAgICAgICAgICAgIHN0cm9rZS13aWR0aCA9IFwiMTBcIlxuICAgICAgICAgICAgICAgIGN4PXtleWVPZmZzZXRYfVxuICAgICAgICAgICAgICAgIGN5PXstZXllT2Zmc2V0WX1cbiAgICAgICAgICAgICAgICA+PC9jaXJjbGU+XG4gICAgPC8+XG4gICk7IiwiaW1wb3J0IHthcmN9IGZyb20gJ2QzJztcblxuZXhwb3J0IGNvbnN0IE1vdXRoID0gKHtpbm5lclJhZGl1cywgb3V0ZXJSYWRpdXN9KT0+e1xuICBjb25zdCBtb3V0aEFyYyA9IGFyYygpXG5cdC5pbm5lclJhZGl1cyhpbm5lclJhZGl1cylcblx0Lm91dGVyUmFkaXVzKG91dGVyUmFkaXVzKVxuXHQuc3RhcnRBbmdsZShNYXRoLlBJIC8gMilcblx0LmVuZEFuZ2xlKE1hdGguUEkqIDMvMik7XG4gICAgXG5cdHJldHVybiA8cGF0aCBkPXttb3V0aEFyYygpfT48L3BhdGg+XG59OyIsImltcG9ydCB7IEZhY2VDb250YWluZXIgfSBmcm9tICcuL0ZhY2VDb250YWluZXInO1xuaW1wb3J0IHsgQmFja2dyb3VuZENpcmxjZSB9IGZyb20gJy4vQmFja2dyb3VuZENpcmNsZSc7XG5pbXBvcnQgeyBFeWVzIH0gZnJvbSAnLi9FeWVzJztcbmltcG9ydCB7IE1vdXRoIH0gZnJvbSAnLi9Nb3V0aCc7XG5cbmV4cG9ydCBjb25zdCBGYWNlID0gKHtcbiAgd2lkdGgsIFxuICBoZWlnaHQsIFxuICBjZW50ZXJYLCBcbiAgY2VudGVyWSwgXG4gIGV5ZVIsIFxuICBzdHJva2V3aWR0aCxcbiAgaW5uZXJSYWRpdXMsIFxuICBvdXRlclJhZGl1cywgXG4gIGV5ZU9mZnNldFgsIFxuICBleWVPZmZzZXRZfSkgPT4gKFxuXHQ8RmFjZUNvbnRhaW5lciB3aWR0aCA9IHt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9IGNlbnRlclg9e2NlbnRlclh9IGNlbnRlclk9e2NlbnRlcll9PlxuICAgICAgPEJhY2tncm91bmRDaXJsY2UgcmFkaXVzPXtjZW50ZXJZLXN0cm9rZXdpZHRoIC8yfSBzdHJva2V3aWR0aD17c3Ryb2tld2lkdGh9Lz5cbiAgICAgIDxFeWVzIGV5ZVI9IHtleWVSfSBleWVPZmZzZXRYPXtleWVPZmZzZXRYfSBleWVPZmZzZXRZID0ge2V5ZU9mZnNldFl9Lz5cbiAgICAgIDxNb3V0aCBpbm5lclJhZGl1cz17aW5uZXJSYWRpdXN9IG91dGVyUmFkaXVzPXtvdXRlclJhZGl1c30vPlxuICAgICA8L0ZhY2VDb250YWluZXI+XG4pOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7IHJhbmdlIH0gZnJvbSAnZDMnO1xuXG5pbXBvcnQgeyBGYWNlIH0gZnJvbSAnLi9GYWNlJztcblxuY29uc3Qgd2lkdGggPSAxNTA7XG5jb25zdCBoZWlnaHQgPSAxNTA7XG5jb25zdCBhcnJheSA9IHJhbmdlKDEwMCk7XG5cbmNvbnN0IEFwcCA9ICgpID0+ICBhcnJheS5tYXAoKCk9PihcbiAgXHRcblx0XHRcdDxGYWNlIFxuICAgICAgICB3aWR0aCA9IHt3aWR0aH1cbiAgICAgICAgaGVpZ2h0ID0ge2hlaWdodH1cbiAgICAgICAgY2VudGVyWCA9IHt3aWR0aC8yfVxuICAgICAgICBjZW50ZXJZID0ge2hlaWdodC8yfVxuICAgICAgICBzdHJva2V3aWR0aCA9IHsyfVxuICAgICAgICBleWVPZmZzZXRYID0gezIwfVxuICAgICAgICBleWVPZmZzZXRZID0gezEwfVxuICAgICAgICBleWVSID0gezUgKyBNYXRoLnJhbmRvbSgpKjEwfVxuICAgICAgICBpbm5lclJhZGl1cyA9IHs0MH1cbiAgICAgICAgb3V0ZXJSYWRpdXMgPSB7NDV9XG4gICAgICAgIC8+XG4gICkpO1xuY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIik7XG5SZWFjdERPTS5yZW5kZXIoPEFwcC8+LCByb290RWxlbWVudCk7XG4iXSwibmFtZXMiOlsiYXJjIiwicmFuZ2UiLCJSZWFjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0VBQU8sTUFBTSxhQUFhLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDekU7RUFDQSw4QkFBSyxPQUFPLEtBQU0sRUFBQyxRQUFVO0VBQzdCLElBQUksNEJBQUcsV0FBYSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0VBQ3JELE1BQU8sUUFBUztFQUNoQixHQUFNO0VBQ04sR0FBUTtFQUNSLENBQUM7O0VDUE0sTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQztFQUN0RCxFQUFFO0VBQ0YsVUFBVSxHQUFHLE1BQU8sRUFDVixNQUFLLFFBQVEsRUFDYixRQUFPLE9BQU8sRUFDZCxnQkFBYyxhQUFZLENBQzFCO0VBQ1YsQ0FBQzs7RUNQTSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUU7RUFDbEQsRUFBRTtFQUNGLEVBQUU7RUFDRixnQkFBZ0IsR0FBRyxJQUFLLEVBQ1IsTUFBSyxPQUFPLEVBQ1osUUFBUyxPQUFPLEVBQ2hCLGdCQUFlLElBQUksRUFDbkIsSUFBSSxDQUFDLFVBQVcsRUFDaEIsSUFBSSxDQUFDLFlBQ0o7RUFDakIsTUFBTTtFQUNOLGdCQUFnQixHQUFHLElBQUssRUFDUixNQUFLLE9BQU8sRUFDWixRQUFTLE9BQU8sRUFDaEIsZ0JBQWUsSUFBSSxFQUNuQixJQUFJLFVBQVcsRUFDZixJQUFJLENBQUMsWUFDSixDQUFTO0VBQzFCLEtBQU87RUFDUCxHQUFHOztFQ2pCSSxNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxHQUFHO0VBQ25ELEVBQUUsTUFBTSxRQUFRLEdBQUdBLE1BQUcsRUFBRTtFQUN4QixFQUFFLFdBQVcsQ0FBQyxXQUFXLENBQUM7RUFDMUIsRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDO0VBQzFCLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0VBQ3pCLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3pCO0VBQ0EsQ0FBQyxPQUFPLCtCQUFNLEdBQUcsUUFBUSxJQUFJLENBQU87RUFDcEMsQ0FBQzs7RUNMTSxNQUFNLElBQUksR0FBRyxDQUFDO0VBQ3JCLEVBQUUsS0FBSztFQUNQLEVBQUUsTUFBTTtFQUNSLEVBQUUsT0FBTztFQUNULEVBQUUsT0FBTztFQUNULEVBQUUsSUFBSTtFQUNOLEVBQUUsV0FBVztFQUNiLEVBQUUsV0FBVztFQUNiLEVBQUUsV0FBVztFQUNiLEVBQUUsVUFBVTtFQUNaLEVBQUUsVUFBVSxDQUFDO0VBQ2IsQ0FBQyxxQkFBQyxpQkFBYyxPQUFTLEtBQU0sRUFBQyxRQUFRLE1BQU8sRUFBQyxTQUFTLE9BQVEsRUFBQyxTQUFTO0VBQzNFLE1BQU0scUJBQUMsb0JBQWlCLFFBQVEsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFFLEVBQUMsYUFBYSxhQUFZO0VBQ2pGLE1BQU0scUJBQUMsUUFBSyxNQUFPLElBQUssRUFBQyxZQUFZLFVBQVcsRUFBQyxZQUFjLFlBQVc7RUFDMUUsTUFBTSxxQkFBQyxTQUFNLGFBQWEsV0FBWSxFQUFDLGFBQWEsYUFBWSxDQUFFO0VBQ2xFLE1BQXFCO0VBQ3JCLENBQUM7O0VDZkQsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDO0VBQ2xCLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQztFQUNuQixNQUFNLEtBQUssR0FBR0MsUUFBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3pCO0VBQ0EsTUFBTSxHQUFHLEdBQUcsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDO0VBQzdCO0VBQ0EsR0FBR0MsdUJBQUM7RUFDSixRQUFRLE9BQVMsS0FBTSxFQUNmLFFBQVUsTUFBTyxFQUNqQixTQUFXLEtBQUssQ0FBQyxDQUFFLEVBQ25CLFNBQVcsTUFBTSxDQUFDLENBQUUsRUFDcEIsYUFBZSxDQUFFLEVBQ2pCLFlBQWMsRUFBRyxFQUNqQixZQUFjLEVBQUcsRUFDakIsTUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUcsRUFDN0IsYUFBZSxFQUFHLEVBQ2xCLGFBQWUsSUFBRyxDQUNoQjtFQUNWLEdBQUcsQ0FBQyxDQUFDO0VBQ0wsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztFQUNwRCxRQUFRLENBQUMsTUFBTSxDQUFDQSx1QkFBQyxTQUFHLEVBQUUsRUFBRSxXQUFXLENBQUM7Ozs7In0=